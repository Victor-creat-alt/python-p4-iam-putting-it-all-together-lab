#!/usr/bin/env python3

from flask import request, session
from flask_restful import Resource
from sqlalchemy.exc import IntegrityError

from config import app, db, api
from models import User, Recipe

class Signup(Resource):
    def post(self):
        json = request.get_json()
        username = json.get('username')
        password = json.get('password')
        bio = json.get('bio')
        image_url = json.get('image_url')

        if not username or not password:
            return {'error': '422: Unprocessable Entry'}, 422

        new_user = User(
            username=username,
            bio=bio,
            image_url=image_url,
        )
        new_user.set_password(password) # set password here

        db.session.add(new_user)
        db.session.commit()

        return new_user.to_dict(), 201
    
class CheckSession(Resource):
    def get(self):
        user_id = session.get('user_id')
        if not user_id:
            return {'error': '401 Unauthorized'}, 401

        user = User.query.filter(User.id == user_id).first()
        if not user:
            return {'error': '401 Unauthorized'}, 401

        return user.to_dict(), 200

class Login(Resource):
    def post(self):
        json = request.get_json()
        username = json.get('username')
        password = json.get('password')

        user = User.query.filter(User.username == username).first()

        if user and user.validate_password(password):  # Use validate_password
            session['user_id'] = user.id
            return user.to_dict(), 200

        return {'error': '401 Unauthorized'}, 401

class Logout(Resource):
    def delete(self):
        if not session.get('user_id'):
            return {'error': '401 Unauthorized'}, 401

        session['user_id'] = None
        return {}, 204

class RecipeIndex(Resource):
    def get(self):
        if not session.get('user_id'):
            return {'error': '401 Unauthorized'}, 401

        user_id = session['user_id']
        user = User.query.filter(User.id == user_id).first()

        if not user:
            return {'error': '401 Unauthorized'}, 401

        recipes = [recipe.to_dict() for recipe in user.recipes]
        return recipes, 200

    def post(self):
        if not session.get('user_id'):
            return {'error': '401 Unauthorized'}, 401

        user_id = session['user_id']
        user = User.query.filter(User.id == user_id).first()
        if not user:
            return {'error': '401 Unauthorized'}, 401

        json = request.get_json()
        title = json.get('title')
        instructions = json.get('instructions')
        minutes_to_complete = json.get('minutes_to_complete')

        if not title or not instructions or not minutes_to_complete:
            return {'error': '422: Unprocessable Entry'}, 422

        new_recipe = Recipe(
            title=title,
            instructions=instructions,
            minutes_to_complete=minutes_to_complete,
            user_id=user_id
        )
        db.session.add(new_recipe)
        db.session.commit()

        return new_recipe.to_dict(), 201

api.add_resource(Signup, '/signup', endpoint='signup')
api.add_resource(CheckSession, '/check_session', endpoint='check_session')
api.add_resource(Login, '/login', endpoint='login')
api.add_resource(Logout, '/logout', endpoint='logout')
api.add_resource(RecipeIndex, '/recipes', endpoint='recipes')

if __name__ == '__main__':
    app.run(port=5555, debug=True)